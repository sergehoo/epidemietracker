# Generated by Django 4.2.15 on 2024-08-09 00:56

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='DistrictSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, unique=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.districtsanitaire', verbose_name='District Sanitaire')),
            ],
            options={
                'permissions': (('can_edit_employee', 'Can edit employee'), ('can_create_employee', 'Can create employee'), ('can_view_salary', 'can view salary')),
            },
        ),
        migrations.CreateModel(
            name='Epidemie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='PreleveMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Typeepidemie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_patient', models.CharField(blank=True, max_length=100, unique=True)),
                ('nom', models.CharField(max_length=225)),
                ('prenoms', models.CharField(max_length=225)),
                ('contact', models.CharField(max_length=225)),
                ('situation_matrimoniale', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(max_length=200)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(default=0)),
                ('groupe_sanguin', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('employeur', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('commune', models.CharField(blank=True, max_length=100, null=True)),
                ('quartier', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Transféré', 'Transféré'), ('Décédé', 'Décédé'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('adresse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='epidemie.city')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='epidemie.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code_patient', models.CharField(blank=True, db_index=True, max_length=100)),
                ('nom', models.CharField(max_length=225)),
                ('prenoms', models.CharField(max_length=225)),
                ('contact', models.CharField(max_length=225)),
                ('situation_matrimoniale', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(max_length=200)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(default=0)),
                ('groupe_sanguin', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('employeur', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('commune', models.CharField(blank=True, max_length=100, null=True)),
                ('quartier', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Transféré', 'Transféré'), ('Décédé', 'Décédé'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adresse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.city')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical patient',
                'verbose_name_plural': 'historical patients',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('district', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.districtsanitaire', verbose_name='District Sanitaire')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.servicesanitaire', verbose_name='Service Sanitaire')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEchantillon',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code_echantillon', models.CharField(blank=True, max_length=10, null=True)),
                ('date_collect', models.DateTimeField(blank=True, null=True)),
                ('site_collect', models.CharField(blank=True, max_length=100, null=True)),
                ('status_echantillons', models.CharField(blank=True, max_length=10, null=True)),
                ('linked', models.BooleanField(blank=True, default=False, null=True)),
                ('used', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('agent_collect', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('maladie', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.epidemie')),
                ('mode_preleve', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.prelevemode')),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='epidemie.patient')),
            ],
            options={
                'verbose_name': 'historical echantillon',
                'verbose_name_plural': 'historical echantillons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='epidemie',
            name='symptômes',
            field=models.ManyToManyField(related_name='épidémies', to='epidemie.symptom'),
        ),
        migrations.AddField(
            model_name='epidemie',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.typeepidemie'),
        ),
        migrations.CreateModel(
            name='EpidemicCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_name', models.CharField(max_length=100)),
                ('date_reported', models.DateField()),
                ('num_cases', models.IntegerField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epidemie.city')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.servicesanitaire', verbose_name='Service Sanitaire'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Echantillon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_echantillon', models.CharField(blank=True, max_length=10, null=True)),
                ('date_collect', models.DateTimeField(blank=True, null=True)),
                ('site_collect', models.CharField(blank=True, max_length=100, null=True)),
                ('status_echantillons', models.CharField(blank=True, max_length=10, null=True)),
                ('linked', models.BooleanField(blank=True, default=False, null=True)),
                ('used', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('agent_collect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.employee')),
                ('maladie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.epidemie')),
                ('mode_preleve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='epidemie.prelevemode')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='echantillons', to='epidemie.patient')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epidemie.healthregion'),
        ),
    ]
